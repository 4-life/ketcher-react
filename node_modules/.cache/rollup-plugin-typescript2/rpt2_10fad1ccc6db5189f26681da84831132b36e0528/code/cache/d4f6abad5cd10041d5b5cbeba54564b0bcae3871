{"code":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { appUpdate } from '../options';\r\nimport { FunctionalGroupsProvider, SdfSerializer } from 'ketcher-core';\r\nimport { prefetchStatic } from '../templates/init-lib';\r\nconst initialState = {\r\n    lib: [],\r\n    functionalGroupInfo: null,\r\n    mode: 'fg'\r\n};\r\nconst functionalGroupsReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case 'FG_INIT':\r\n            return { ...state, ...payload };\r\n        case 'FG_HIGHLIGHT':\r\n            return { ...state, functionalGroupInfo: payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst initFGroups = (lib) => ({ type: 'FG_INIT', payload: { lib } });\r\nconst highlightFGroup = (group) => ({\r\n    type: 'FG_HIGHLIGHT',\r\n    payload: group\r\n});\r\nexport function highlightFG(dispatch, group) {\r\n    dispatch(highlightFGroup(group));\r\n}\r\nexport function initFGTemplates(baseUrl) {\r\n    return async (dispatch) => {\r\n        const fileName = 'fg.sdf';\r\n        const url = `${baseUrl}/templates/${fileName}`;\r\n        const provider = FunctionalGroupsProvider.getInstance();\r\n        const sdfSerializer = new SdfSerializer();\r\n        const text = await prefetchStatic(url);\r\n        const templates = sdfSerializer.deserialize(text);\r\n        const functionalGroups = templates.reduce((acc, { struct }) => [...acc, struct], []);\r\n        provider.setFunctionalGroupsList(functionalGroups);\r\n        dispatch(initFGroups(templates));\r\n        dispatch(appUpdate({ functionalGroups: true }));\r\n    };\r\n}\r\nexport default functionalGroupsReducer;\r\n//# sourceMappingURL=index.js.map","references":["/home/ubuntu/work/4life/ketcher/node_modules/redux/index.d.ts","/home/ubuntu/work/4life/ketcher/packages/ketcher-react/src/script/ui/state/options/index.js","/home/ubuntu/work/4life/ketcher/packages/ketcher-core/dist/index.d.ts","/home/ubuntu/work/4life/ketcher/packages/ketcher-react/src/script/ui/state/templates/init-lib.js"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../src/script/ui/state/functionalGroups/index.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;6EAc6E;AAG7E,OAAO,EAAE,SAAS,EAAE,MAAM,YAAY,CAAA;AACtC,OAAO,EACL,wBAAwB,EAExB,aAAa,EAEd,MAAM,cAAc,CAAA;AACrB,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAA;AAQtD,MAAM,YAAY,GAAY;IAC5B,GAAG,EAAE,EAAE;IACP,mBAAmB,EAAE,IAAI;IACzB,IAAI,EAAE,IAAI;CACX,CAAA;AAED,MAAM,uBAAuB,GAAG,CAC9B,KAAK,GAAG,YAAY,EACpB,EAAE,IAAI,EAAE,OAAO,EAAa,EAC5B,EAAE;IACF,QAAQ,IAAI,EAAE;QACZ,KAAK,SAAS;YACZ,OAAO,EAAE,GAAG,KAAK,EAAE,GAAG,OAAO,EAAE,CAAA;QAEjC,KAAK,cAAc;YACjB,OAAO,EAAE,GAAG,KAAK,EAAE,mBAAmB,EAAE,OAAO,EAAE,CAAA;QAEnD;YACE,OAAO,KAAK,CAAA;KACf;AACH,CAAC,CAAA;AAED,MAAM,WAAW,GAAG,CAAC,GAAc,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAA;AAC/E,MAAM,eAAe,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,CAAC;IACvC,IAAI,EAAE,cAAc;IACpB,OAAO,EAAE,KAAK;CACf,CAAC,CAAA;AAEF,MAAM,UAAU,WAAW,CAAC,QAAQ,EAAE,KAAU;IAC9C,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAA;AAClC,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,OAAe;IAC7C,OAAO,KAAK,EAAE,QAAQ,EAAE,EAAE;QACxB,MAAM,QAAQ,GAAG,QAAQ,CAAA;QACzB,MAAM,GAAG,GAAG,GAAG,OAAO,cAAc,QAAQ,EAAE,CAAA;QAC9C,MAAM,QAAQ,GAAG,wBAAwB,CAAC,WAAW,EAAE,CAAA;QACvD,MAAM,aAAa,GAAG,IAAI,aAAa,EAAE,CAAA;QACzC,MAAM,IAAI,GAAG,MAAM,cAAc,CAAC,GAAG,CAAC,CAAA;QACtC,MAAM,SAAS,GAAG,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;QACjD,MAAM,gBAAgB,GAAG,SAAS,CAAC,MAAM,CACvC,CAAC,GAAa,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,EAAE,MAAM,CAAC,EAC/C,EAAE,CACH,CAAA;QACD,QAAQ,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAA;QAClD,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAA;QAChC,QAAQ,CAAC,SAAS,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;IACjD,CAAC,CAAA;AACH,CAAC;AAED,eAAe,uBAAuB,CAAA\"}","dts":{"name":"/home/ubuntu/work/4life/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/state/functionalGroups/index.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { AnyAction } from 'redux';\r\ninterface FGState {\r\n    lib: [];\r\n    functionalGroupInfo: any;\r\n    mode: string;\r\n}\r\ndeclare const functionalGroupsReducer: (state: FGState | undefined, { type, payload }: AnyAction) => any;\r\nexport declare function highlightFG(dispatch: any, group: any): void;\r\nexport declare function initFGTemplates(baseUrl: string): (dispatch: any) => Promise<void>;\r\nexport default functionalGroupsReducer;\r\n"}}
