{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\r\n/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Component, createRef } from 'react';\r\nimport { MolSerializer, Render, Struct } from 'ketcher-core';\r\n/**\r\n * for S-Groups we want to show expanded structure\r\n * without brackets\r\n */\r\nfunction prepareStruct(struct) {\r\n    if (struct.sgroups.size > 0) {\r\n        const newStruct = struct.clone();\r\n        newStruct.sgroups.delete(0);\r\n        return newStruct;\r\n    }\r\n    return struct;\r\n}\r\n/**\r\n * Is used to improve search and opening tab performance in Template Dialog\r\n * Rendering a lot of structures causes great delay\r\n */\r\nconst renderCache = new Map();\r\nfunction renderStruct(el, struct, options = {}) {\r\n    if (el && struct) {\r\n        const { cachePrefix = '' } = options;\r\n        const cacheKey = `${cachePrefix}${struct.name}`;\r\n        if (renderCache.has(cacheKey)) {\r\n            el.innerHTML = renderCache.get(cacheKey);\r\n            return;\r\n        }\r\n        const preparedStruct = prepareStruct(struct);\r\n        preparedStruct.initHalfBonds();\r\n        preparedStruct.initNeighbors();\r\n        preparedStruct.setImplicitHydrogen();\r\n        preparedStruct.markFragments();\r\n        const rnd = new Render(el, {\r\n            autoScale: true,\r\n            ...options\r\n        });\r\n        rnd.setMolecule(preparedStruct);\r\n        rnd.update(true, options.viewSz);\r\n        renderCache.set(cacheKey, rnd.clientArea.innerHTML);\r\n    }\r\n}\r\nclass StructRender extends Component {\r\n    tagRef;\r\n    constructor(props) {\r\n        super(props);\r\n        this.tagRef = createRef();\r\n    }\r\n    shouldComponentUpdate(previousProps) {\r\n        return Boolean(this.props.id && this.props.id !== previousProps.id);\r\n    }\r\n    update() {\r\n        const el = this.tagRef.current;\r\n        const { struct, options } = this.props;\r\n        let parsedStruct;\r\n        if (!(struct instanceof Struct)) {\r\n            try {\r\n                const molSerialzer = new MolSerializer();\r\n                parsedStruct = molSerialzer.deserialize(struct);\r\n            }\r\n            catch (e) {\r\n                // TODO: add error handler call\r\n                // legacy message: Could not parse structure\r\n                parsedStruct = null;\r\n            }\r\n        }\r\n        else {\r\n            parsedStruct = struct;\r\n        }\r\n        el?.childNodes.forEach((node) => {\r\n            node.remove();\r\n        });\r\n        renderStruct(el, parsedStruct, options);\r\n    }\r\n    componentDidMount() {\r\n        this.update();\r\n    }\r\n    componentDidUpdate() {\r\n        this.update();\r\n    }\r\n    render() {\r\n        const { struct, Tag = 'div', ...props } = this.props;\r\n        return (_jsx(Tag, { ref: this.tagRef, ...props, children: struct ? null : 'No molecule' }));\r\n    }\r\n}\r\nexport default StructRender;\r\n//# sourceMappingURL=structrender.js.map","references":["/home/ubuntu/work/4life/ketcher/node_modules/@types/react/index.d.ts","/home/ubuntu/work/4life/ketcher/packages/ketcher-core/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"structrender.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/script/ui/component/structrender.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/ubuntu/work/4life/ketcher/packages/ketcher-react/node_modules/.cache/rollup-plugin-typescript2/placeholder/script/ui/component/structrender.d.ts","writeByteOrderMark":false,"text":"/****************************************************************************\r\n * Copyright 2021 EPAM Systems\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *    http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ***************************************************************************/\r\nimport { Component, ComponentType } from 'react';\r\nimport { Struct } from 'ketcher-core';\r\ninterface StructRenderProps {\r\n    struct: Struct;\r\n    options: any;\r\n    id?: any;\r\n    Tag?: string | ComponentType<any>;\r\n}\r\ndeclare class StructRender extends Component<StructRenderProps> {\r\n    tagRef: React.RefObject<HTMLElement>;\r\n    constructor(props: any);\r\n    shouldComponentUpdate(previousProps: any): boolean;\r\n    update(): void;\r\n    componentDidMount(): void;\r\n    componentDidUpdate(): void;\r\n    render(): JSX.Element;\r\n}\r\nexport default StructRender;\r\n"}}
